#
# Copyright (c) 2016, Inversoft Inc., All Rights Reserved
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
# either express or implied. See the License for the specific
# language governing permissions and limitations under the License.
#

import requests

class PassportClient:
    """The PassportClient provides easy access to the Passport API."""

    def __init__(self, api_key, base_url):
        """Constructs a new PassportClient.

        Attributes:
            api_key: A string representing the API used to authenticate the API call to Passport
            base_url: A string representing the URL use to access Passport
        """
        self.api_key = api_key
        self.base_url = base_url

<% apis.each { api -> %>    def <%= api['underscoreMethodName'] %>(<%= ['self'].plus(api['params'].collect({ param -> param['underscoreName'] })).join(', ') %>):
        """<%= api['comments'].join('\n        ') %>

        Attributes:
            <% api['params'].each { param -> %> <%= param['underscoreName'] %>: <%= param['comments'].join('\n                    ') %>
            <% } %>
        """
        return self.start().uri('<%= api['uri'] %>') \\<% api['params'].each { param -> %><% if (param['type'] == 'urlSegment') { %>
                .url_segment(<%= param['underscoreName'] %>) \\<% } else if (param['type'] == 'urlParameter') { %>
                .url_parameter(<%= param['underscoreName'] %>) \\<% } else if (param['type'] == 'body') { %>
                .body_handler(JSONBodyHandler(<%= param['underscoreName'] %>)) \\<% } %><% } %>
                .<%= api['method'] %>() \\
                .go()
<% } %>

    def start(self):
        return RESTClient().authorization(self.api_key).url(self.base_url)
